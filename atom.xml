<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Guojun Wang&#39;s Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://itwanggj.github.io/"/>
  <updated>2017-02-26T12:25:49.000Z</updated>
  <id>https://itwanggj.github.io/</id>
  
  <author>
    <name>Guojun Wang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>深入理解javascript原型和闭包（转）</title>
    <link href="https://itwanggj.github.io/2017/03/24/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3javascript%E5%8E%9F%E5%9E%8B%E5%92%8C%E9%97%AD%E5%8C%85/"/>
    <id>https://itwanggj.github.io/2017/03/24/深入理解javascript原型和闭包/</id>
    <published>2017-03-24T15:48:53.000Z</published>
    <updated>2017-02-26T12:25:49.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>　　该教程绕开了javascript的一些基本的语法知识，直接讲解javascript中最难理解的两个部分，也是和其他主流面向对象语言区别最大的两个部分——原型和闭包，当然，肯定少不了原型链和作用域链。帮你揭开javascript最神秘的面纱。</p>
<p>　　为什么要偏偏要讲这两个知识点？</p>
<p>　　这是我在这么多年学习javascript的经历中，认为最难理解、最常犯错的地方，学习这两个知识点，会让你对javascript有更深层次的理解，至少理解了原型和作用域，就不能再算是javascript菜鸟了。另外，这两方面也是javascript与其他语言不同的地方，学习这样的设计，有助于你开阔眼界，帮助你了解编程语言的设计思路。毕竟，你不能只把眼睛盯在一门语言上。</p>
<p>　　闲话不多讲，相信奔着这个话题来的朋友，也知道javascript原型和作用域的重要性。<br><a id="more"></a></p>
<h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul>
<li><a href="http://www.cnblogs.com/wangfupeng1988/p/3977987.html" target="_blank" rel="external">深入理解javascript原型和闭包（1）——一切都是对象</a></li>
<li><a href="http://www.cnblogs.com/wangfupeng1988/p/3978035.html" target="_blank" rel="external">深入理解javascript原型和闭包（2）——函数和对象的关系</a></li>
<li><a href="http://www.cnblogs.com/wangfupeng1988/p/3978131.html" target="_blank" rel="external">深入理解javascript原型和闭包（3）——prototype原型</a></li>
<li><a href="http://www.cnblogs.com/wangfupeng1988/p/3979290.html" target="_blank" rel="external">深入理解javascript原型和闭包（4）——隐式原型</a></li>
<li><a href="http://www.cnblogs.com/wangfupeng1988/p/3979533.html" target="_blank" rel="external">深入理解javascript原型和闭包（5）——instanceof</a></li>
<li><a href="http://www.cnblogs.com/wangfupeng1988/p/3979985.html" target="_blank" rel="external">深入理解javascript原型和闭包（6）——继承</a></li>
<li><a href="http://www.cnblogs.com/wangfupeng1988/p/3980065.html" target="_blank" rel="external">深入理解javascript原型和闭包（7）——原型的灵活性</a></li>
<li><a href="http://www.cnblogs.com/wangfupeng1988/p/3986420.html" target="_blank" rel="external">深入理解javascript原型和闭包（8）——简述【执行上下文】上</a></li>
<li><a href="http://www.cnblogs.com/wangfupeng1988/p/3987563.html" target="_blank" rel="external">深入理解javascript原型和闭包（9）——简述【执行上下文】下</a></li>
<li><a href="http://www.cnblogs.com/wangfupeng1988/p/3988422.html" target="_blank" rel="external">深入理解javascript原型和闭包（10）——this</a></li>
<li><a href="http://www.cnblogs.com/wangfupeng1988/p/3989357.html" target="_blank" rel="external">深入理解javascript原型和闭包（11）——执行上下文栈</a></li>
<li><a href="http://www.cnblogs.com/wangfupeng1988/p/3991151.html" target="_blank" rel="external">深入理解javascript原型和闭包（12）——简介【作用域】</a></li>
<li><a href="http://www.cnblogs.com/wangfupeng1988/p/3991995.html" target="_blank" rel="external">深入理解javascript原型和闭包（13）-【作用域】和【上下文环境】</a></li>
<li><a href="http://www.cnblogs.com/wangfupeng1988/p/3992795.html" target="_blank" rel="external">深入理解javascript原型和闭包（14）——从【自由变量】到【作用域链】</a></li>
<li><a href="http://www.cnblogs.com/wangfupeng1988/p/3994065.html" target="_blank" rel="external">深入理解javascript原型和闭包（15）——闭包</a></li>
<li><a href="http://www.cnblogs.com/wangfupeng1988/p/3994950.html" target="_blank" rel="external">深入理解javascript原型和闭包（16）——完结</a></li>
<li><a href="http://www.cnblogs.com/wangfupeng1988/p/3996037.html" target="_blank" rel="external">深入理解javascript原型和闭包（17）——补this</a></li>
<li><a href="http://www.cnblogs.com/wangfupeng1988/p/4000798.html" target="_blank" rel="external">深入理解javascript原型和闭包（18）——补充：上下文环境和作用域的关系</a></li>
</ul>
<p>说明：原文转载于<a href="http://www.cnblogs.com/wangfupeng1988/p/3977924.html" target="_blank" rel="external">深入理解javascript原型和闭包（完结）</a>,非常感谢。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h2&gt;&lt;p&gt;　　该教程绕开了javascript的一些基本的语法知识，直接讲解javascript中最难理解的两个部分，也是和其他主流面向对象语言区别最大的两个部分——原型和闭包，当然，肯定少不了原型链和作用域链。帮你揭开javascript最神秘的面纱。&lt;/p&gt;
&lt;p&gt;　　为什么要偏偏要讲这两个知识点？&lt;/p&gt;
&lt;p&gt;　　这是我在这么多年学习javascript的经历中，认为最难理解、最常犯错的地方，学习这两个知识点，会让你对javascript有更深层次的理解，至少理解了原型和作用域，就不能再算是javascript菜鸟了。另外，这两方面也是javascript与其他语言不同的地方，学习这样的设计，有助于你开阔眼界，帮助你了解编程语言的设计思路。毕竟，你不能只把眼睛盯在一门语言上。&lt;/p&gt;
&lt;p&gt;　　闲话不多讲，相信奔着这个话题来的朋友，也知道javascript原型和作用域的重要性。&lt;br&gt;
    
    </summary>
    
      <category term="原型" scheme="https://itwanggj.github.io/categories/%E5%8E%9F%E5%9E%8B/"/>
    
      <category term="闭包" scheme="https://itwanggj.github.io/categories/%E5%8E%9F%E5%9E%8B/%E9%97%AD%E5%8C%85/"/>
    
    
      <category term="JavaScript" scheme="https://itwanggj.github.io/tags/JavaScript/"/>
    
      <category term="原型" scheme="https://itwanggj.github.io/tags/%E5%8E%9F%E5%9E%8B/"/>
    
      <category term="闭包" scheme="https://itwanggj.github.io/tags/%E9%97%AD%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>来自CSS3的黑科技－－如何实现环形进度条</title>
    <link href="https://itwanggj.github.io/2017/01/08/%E5%9F%BA%E4%BA%8EHexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%AE%A2/"/>
    <id>https://itwanggj.github.io/2017/01/08/基于Hexo搭建个人技术博客/</id>
    <published>2017-01-08T09:49:50.000Z</published>
    <updated>2017-02-26T13:10:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>CSS3的提出使得CSS不再是单纯的样式表，只要运用得到，就可以实现一些我们很棒的动画效果，最近项目有需求需要实现一个环形进度条，一开始没有思路，在看了《CSS Secret》之后觉得有受启发，便记录下这个过程。在过去，实现一个这样的进度条难免要拼接大量图片，CSS3和HTML5的出现使得这个过程变得简单无比。<br>首先，我们需要一个元素来承载我们的样式：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pie"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>事实上，如果要实现环形图，只要实现饼图，然后在其上覆盖一层遮罩即可，所以我们可以先从如何实现饼图开始：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.pie</span> &#123;</div><div class="line">    <span class="attribute">width </span>: <span class="number">200px</span>;</div><div class="line">    <span class="attribute">height </span>: <span class="number">200px</span>;</div><div class="line">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</div><div class="line">    <span class="attribute">background</span>: <span class="number">#ddd</span>;</div><div class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">    <span class="attribute">position</span>: relative;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>我们首先通过.pie实现了一个圆形，并将其居中方便我们进行观察，效果如下：</p>
<p><img src="https://itwanggj.github.io/images/circle-step-1.png" alt=""></p>
<a id="more"></a>
<p>我们需要用蓝色来代表饼图的比例，《CSS Secret》给出的思路是覆盖一层与背景同色的伪元素上去，使其旋转露出比例的部分，那么首先，需要将圆形另一半的背景色置为蓝色，可以通过线性渐变来实现：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">background-image</span>: <span class="selector-tag">linear-gradient</span>(<span class="selector-tag">to</span> <span class="selector-tag">right</span>, <span class="selector-tag">transparent</span> 50%, <span class="selector-id">#3195d0</span> 0);</div></pre></td></tr></table></figure></p>
<p>效果如下：</p>
<p><img src="https://itwanggj.github.io/images/circle-step-2.png" alt=""></p>
<p>然后，我们通过伪元素::before添加一层遮罩，使其遮挡住右半部分：<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">.pie::before &#123;</div><div class="line">    content: '';</div><div class="line">    display: block;</div><div class="line">    margin-left: 50%;</div><div class="line">    height: 100%;</div><div class="line">    background-color: inherit;</div><div class="line">    border-radius: 0 100% 100% 0 / 50%;    </div><div class="line">｝</div></pre></td></tr></table></figure></p>
<p>伪元素的宽度为圆的一半，并位于右边遮挡住右半部分，当然，仅仅是这样还不够，这里的关键是设置border-radius使其呈现半圆形，border-radius通过/分隔四个角的水平半径和垂直半径。<br>这时候，我们通过transform可以使伪元素发生旋转，露出想要的比例：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">transform-origin</span>: <span class="selector-tag">left</span>;</div><div class="line"><span class="selector-tag">transform</span>: <span class="selector-tag">rotate</span>(<span class="selector-class">.1turn</span>);</div></pre></td></tr></table></figure></p>
<p>效果如下：</p>
<p><img src="https://itwanggj.github.io/images/circle-step-3.png" alt=""></p>
<p>已经离我们想要的越来越接近了，为了让饼图可以动起来，我们可以通过CSS3的animation来实现<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">@<span class="keyword">keyframes</span> spin &#123;</div><div class="line">    <span class="selector-tag">to</span> &#123;</div><div class="line">        <span class="attribute">transform</span>: <span class="built_in">rotate</span>(.5turn);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">@<span class="keyword">keyframes</span> bg &#123;</div><div class="line">    50% &#123;</div><div class="line">        <span class="attribute">background</span>: <span class="number">#3195d0</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.pie</span><span class="selector-pseudo">::before</span> &#123;</div><div class="line">    <span class="attribute">content</span>: <span class="string">''</span>;</div><div class="line">    <span class="attribute">display</span>: block;</div><div class="line">    <span class="attribute">margin-left</span>: <span class="number">50%</span>;</div><div class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</div><div class="line">    <span class="attribute">background-color</span>: inherit;</div><div class="line">    <span class="attribute">border-radius</span>: <span class="number">0</span> <span class="number">100%</span> <span class="number">100%</span> <span class="number">0</span> / <span class="number">50%</span>;</div><div class="line">    <span class="attribute">transform-origin</span>: left;</div><div class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(.1turn);</div><div class="line">    <span class="attribute">animation</span>: spin <span class="number">10s</span> linear infinite,</div><div class="line">               bg <span class="number">20s</span> step-end infinite;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>注意，@keyframes bg的作用是当饼图旋转到一半时应该更换背景颜色，才能达到我们想要的效果，最后，我们再通过::after添加一层伪元素，使圆环看上去有空心的效果：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.pie</span><span class="selector-pseudo">::after</span> &#123;</div><div class="line">    <span class="attribute">content</span>: <span class="string">''</span>;</div><div class="line">    <span class="attribute">display</span>: block;</div><div class="line">    <span class="attribute">height</span>: <span class="number">80%</span>;</div><div class="line">    <span class="attribute">width</span>: <span class="number">80%</span>;</div><div class="line">    <span class="attribute">position</span>: absolute;</div><div class="line">    <span class="attribute">z-index</span>: <span class="number">1</span>;</div><div class="line">    <span class="attribute">top</span>: <span class="number">10%</span>;</div><div class="line">    <span class="attribute">left</span>: <span class="number">10%</span>;</div><div class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</div><div class="line">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>最后的效果如下：</p>
<p><img src="https://itwanggj.github.io/images/circle-step-4.png" alt=""></p>
<p>如此就实现了一个简单的圆环，当然，你可以配合JS来添加一些交互，在这里安利一波《CSS Secret》，充满着CSS3黑科技的好书，据说中文版目前还没有人在翻译。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;CSS3的提出使得CSS不再是单纯的样式表，只要运用得到，就可以实现一些我们很棒的动画效果，最近项目有需求需要实现一个环形进度条，一开始没有思路，在看了《CSS Secret》之后觉得有受启发，便记录下这个过程。在过去，实现一个这样的进度条难免要拼接大量图片，CSS3和HTML5的出现使得这个过程变得简单无比。&lt;br&gt;首先，我们需要一个元素来承载我们的样式：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;pie&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;事实上，如果要实现环形图，只要实现饼图，然后在其上覆盖一层遮罩即可，所以我们可以先从如何实现饼图开始：&lt;br&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.pie&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width &lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;200px&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;height &lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;200px&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;50%&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;#ddd&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; auto;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: relative;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我们首先通过.pie实现了一个圆形，并将其居中方便我们进行观察，效果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://itwanggj.github.io/images/circle-step-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="数据可视化" scheme="https://itwanggj.github.io/categories/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="D3" scheme="https://itwanggj.github.io/categories/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/D3/"/>
    
    
      <category term="JavaScript" scheme="https://itwanggj.github.io/tags/JavaScript/"/>
    
      <category term="html" scheme="https://itwanggj.github.io/tags/html/"/>
    
      <category term="D3" scheme="https://itwanggj.github.io/tags/D3/"/>
    
      <category term="CSS3" scheme="https://itwanggj.github.io/tags/CSS3/"/>
    
  </entry>
  
  <entry>
    <title>使用GitHub + Hexo搭建博客(Mac版)</title>
    <link href="https://itwanggj.github.io/2017/01/06/%E4%BD%BF%E7%94%A8GitHub-Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://itwanggj.github.io/2017/01/06/使用GitHub-Hexo搭建博客/</id>
    <published>2017-01-06T11:28:00.000Z</published>
    <updated>2017-01-06T11:37:06.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><p>从<a href="https://nodejs.org/en/" style="text-decoration:none;" target="_blank" rel="external">Node.js官网</a>按其提示安装，安装成功后如下图：<br><a id="more"></a><br><img src="https://maoqiq.github.io/images/01/01_01nodejs.png" width="280px" style="margin:0;padding:0;"><br>安装成功的Node.js和npm都被安装到了/usr/local/bin目录下，可对其进行测试，看Node.js和npm是否可用：<br>查看Node.js的版本号：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ node -v</div></pre></td></tr></table></figure></p>
<p>Node.js成功安装，可看到如下类似的信息：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">maomaodeMacBook-Pro:~ maomao$ node -v </div><div class="line">v6.2.0</div></pre></td></tr></table></figure></p>
<p>查看npm的版本号：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm -v</div></pre></td></tr></table></figure></p>
<p>npm成功安装，可看到如下类似的信息：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">maomaodeMacBook-Pro:~ maomao$ npm -v </div><div class="line">3.8.9</div></pre></td></tr></table></figure></p>
<h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><p>Xcode自带Git，查看Git版本号：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git version</div></pre></td></tr></table></figure></p>
<p>本地已安装git，可看到如下类似的信息：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">maomaodeMacBook-Pro:~ maomao$ git version </div><div class="line">git version 2.5.4 (Apple Git-61)</div></pre></td></tr></table></figure></p>
<h2 id="安装设置Hexo"><a href="#安装设置Hexo" class="headerlink" title="安装设置Hexo"></a>安装设置Hexo</h2><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>在<strong>Node.js和Git安装完成后</strong> 安装Hexo，在终端输入如下命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo npm install -g hexo</div></pre></td></tr></table></figure></p>
<p><strong style="color:#f5871f;">注：</strong>一定要在前面加<code>sudo</code>，表示Linux系统管理指令，不加<code>sudo</code>会出现权限问题的报错。</p>
<p>安装成功会出现类似下图所示的信息：</p>
<p><img src="https://maoqiq.github.io/images/01/01_02hexoInstall.png" width="280px" style="margin:0;padding:0;"></p>
<h3 id="初始化Hexo"><a href="#初始化Hexo" class="headerlink" title="初始化Hexo"></a>初始化Hexo</h3><p>在用户目录(Users)下创建名为hexo的文件夹，在终端cd进入到此目录下，执行命令：<code>hexo init</code>，操作如下：</p>
<p>1&nbsp;&nbsp;打开Finder，”前往”-&gt;”上层文件夹”，在用户目录下新建hexo文件夹，如下图所示：</p>
<p><img src="https://maoqiq.github.io/images/01/01_03hexoNewFile.png" width="280px" style="margin:0;padding:0;"><br>2&nbsp;&nbsp;在终端进入hexo文件夹，进行初始化hexo，输入内容如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> hexo</div><div class="line">$ hexo init</div></pre></td></tr></table></figure></p>
<p>输入后开始初始化：</p>
<p><img src="https://maoqiq.github.io/images/01/01_04hexoInit.png" width="280px" style="margin:0;padding:0;"></p>
<h3 id="生成静态页面"><a href="#生成静态页面" class="headerlink" title="生成静态页面"></a>生成静态页面</h3><p>1&nbsp;&nbsp;部署前安装依赖：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install</div></pre></td></tr></table></figure></p>
<p>2&nbsp;&nbsp;生成静态页面：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure></p>
<p>生成静态界面时终端的显示如下图：</p>
<p><img src="https://maoqiq.github.io/images/01/01_05hexoGenerate.png" width="280px" style="margin:0;padding:0;"><br>3    开启本地服务器，在本地预览所生成的静态页面，control+c停止服务器：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure></p>
<p>开启本地服务器后显示如下图：</p>
<p><img src="https://maoqiq.github.io/images/01/01_06hexoServer.png" width="280px" style="margin:0;padding:0;"><br>使用<a href="http://localhost:4000/" style="text-decoration:none;" disabled="true" target="_blank" rel="external">http://localhost:4000/</a>在浏览器打开查看本地效果，本地效果如下图所示：</p>
<p><img src="https://maoqiq.github.io/images/01/01_07localPage.png" width="280px" style="margin:0;padding:0;"></p>
<h2 id="关联GitHub"><a href="#关联GitHub" class="headerlink" title="关联GitHub"></a>关联GitHub</h2><h3 id="创建仓库repository"><a href="#创建仓库repository" class="headerlink" title="创建仓库repository"></a>创建仓库repository</h3><p>1&nbsp;&nbsp;登录github帐号，右上角”+”下选择 New repository，创建将用于存储博客的仓库，选择位置如下图所示：</p>
<p><img src="https://maoqiq.github.io/images/01/01_08githubRepository.png" width="280px" style="margin:0;padding:0;"><br>2&nbsp;&nbsp;新建仓库时要使用<code>your_username.github.io</code>固定格式命名仓库，例如：我的用户名为”maoqiq”，则我的仓库名为”maoqiq.github.io”，如下图所示：</p>
<p><img src="https://maoqiq.github.io/images/01/01_09githubNewRepository.JPG" width="280px" style="margin:0;padding:0;"><br>此时本地的hexo文件夹下的内容如下图所示：</p>
<p><img src="https://maoqiq.github.io/images/01/01_10hexoFile.png" width="280px" style="margin:0;padding:0;"></p>
<h3 id="博客部署到github"><a href="#博客部署到github" class="headerlink" title="博客部署到github"></a>博客部署到github</h3><p>1&nbsp;&nbsp;在终端cd进入hexo文件夹，输入以下命令安装git部署器：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-deployer-git --save</div></pre></td></tr></table></figure></p>
<p>2&nbsp;&nbsp;修改根目录下的站点配置文件_config.yml，本人直接使用sublime打开hexo文件夹下的_config.yml文件，在文件末尾修改如下内容，然后保存：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  <span class="built_in">type</span>: git</div><div class="line">  repo: https://github.com/maoqiq/maoqiq.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure></p>
<p><strong style="color:#f5871f;">注：</strong><code>maoqiq</code>改为<code>your_username</code>，即你的github博客仓库的网址，如下图所示：</p>
<p><img src="https://maoqiq.github.io/images/01/01_11githubHttp.JPG" width="280px" style="margin:0;padding:0;"><br><strong style="color:#f5871f;">注：</strong>在配置所有配置文件_config.yml时，所有<code>:</code>冒号后都要加一个”空格”</p>
<p>3&nbsp;&nbsp;在hexo目录下，生成静态页面：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure></p>
<p>4&nbsp;&nbsp;执行部署命令，如果没有关联github，执行时终端会提示输入github的用户名和密码，输入后等待执行成功：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure></p>
<p>正在执行<code>hexo deploy</code>中的终端如下图所示：</p>
<p><img src="https://maoqiq.github.io/images/01/01_12hexoDeploy.png" width="280px" style="margin:0;padding:0;"><br><code>hexo deploy</code>命令执行成功后，在浏览器使用网址<a href="https://maoqiq.github.io/" style="text-decoration:none;" target="_blank" rel="external">https://maoqiq.github.io/</a>打开页面，与本地预览的效果相同，则部署成功，成功页面如下图所示：</p>
<p><img src="https://maoqiq.github.io/images/01/01_13httpPage.png" width="280px" style="margin:0;padding:0;"></p>
<h2 id="发表文章"><a href="#发表文章" class="headerlink" title="发表文章"></a>发表文章</h2><h3 id="新建文章文件"><a href="#新建文章文件" class="headerlink" title="新建文章文件"></a>新建文章文件</h3><p>终端cd进入到hexo目录下执行如下命令创建新文章的<code>.md</code>文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My first article"</span></div></pre></td></tr></table></figure></p>
<p>创建成功会提示：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">INFO Created: /Users/hexo/<span class="built_in">source</span>/_posts/My first article.md</div></pre></td></tr></table></figure></p>
<h3 id="编写文章内容"><a href="#编写文章内容" class="headerlink" title="编写文章内容"></a>编写文章内容</h3><p>本人使用<a href="http://25.io/mou/" style="text-decoration:none;" target="_blank" rel="external"><strong>Mou编辑器</strong></a>(Markdown语言编辑器)编写文章内容，下载后直接将<code>My first article.md</code>文件使用Mou编辑器打开，根据<a href="http://www.markdown.cn" style="text-decoration:none;" target="_blank" rel="external">Markdown语法格式</a>编写文章内容，或者使用HTML编写内容(Mou兼容HTML语法格式)。<br><strong style="color:#f5871f;">注：</strong>使用两种语法格式编写文章内容时，避免嵌套使用，因为在HTML标签内的Markdown格式语法不会被处理。</p>
<h3 id="生成部署新文章"><a href="#生成部署新文章" class="headerlink" title="生成部署新文章"></a>生成部署新文章</h3><p>文章编写好后，执行如下命令，重新生成页面并部署到github上：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ hexo clean</div><div class="line">$ hexo generate</div><div class="line">$ hexo deploy</div></pre></td></tr></table></figure></p>
<p><strong style="color:#f5871f;">注：</strong>hexo命令支持如下缩写形式：<br>hexo generate = hexo g<br>hexo deploy = hexo d<br>hexo server = hexo s<br>hexo new = hexo n</p>
<p>引文来源<a href="https://maoqiq.github.io/2016/12/12/%E4%BD%BF%E7%94%A8GitHub-Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/" style="text-decoration:none;" target="_blank" rel="external">Mao Qi’s Blog</a><br>转载请注明出处</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装环境&quot;&gt;&lt;a href=&quot;#安装环境&quot; class=&quot;headerlink&quot; title=&quot;安装环境&quot;&gt;&lt;/a&gt;安装环境&lt;/h2&gt;&lt;h3 id=&quot;安装Node-js&quot;&gt;&lt;a href=&quot;#安装Node-js&quot; class=&quot;headerlink&quot; title=&quot;安装Node.js&quot;&gt;&lt;/a&gt;安装Node.js&lt;/h3&gt;&lt;p&gt;从&lt;a href=&quot;https://nodejs.org/en/&quot; style=&quot;text-decoration:none;&quot;&gt;Node.js官网&lt;/a&gt;按其提示安装，安装成功后如下图：&lt;br&gt;
    
    </summary>
    
    
      <category term="HEXO" scheme="https://itwanggj.github.io/tags/HEXO/"/>
    
      <category term="Github" scheme="https://itwanggj.github.io/tags/Github/"/>
    
      <category term="itwanggj" scheme="https://itwanggj.github.io/tags/itwanggj/"/>
    
  </entry>
  
  <entry>
    <title>My-article-11</title>
    <link href="https://itwanggj.github.io/2016/11/04/My-article-11/"/>
    <id>https://itwanggj.github.io/2016/11/04/My-article-11/</id>
    <published>2016-11-04T15:32:04.000Z</published>
    <updated>2017-01-08T08:55:39.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="html" scheme="https://itwanggj.github.io/tags/html/"/>
    
      <category term="D3" scheme="https://itwanggj.github.io/tags/D3/"/>
    
      <category term="require" scheme="https://itwanggj.github.io/tags/require/"/>
    
  </entry>
  
  <entry>
    <title>My-article-10</title>
    <link href="https://itwanggj.github.io/2016/10/04/My-article-10/"/>
    <id>https://itwanggj.github.io/2016/10/04/My-article-10/</id>
    <published>2016-10-04T15:32:04.000Z</published>
    <updated>2017-01-08T08:54:57.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="Bootstrap" scheme="https://itwanggj.github.io/tags/Bootstrap/"/>
    
      <category term="jQuery" scheme="https://itwanggj.github.io/tags/jQuery/"/>
    
      <category term="Ionic" scheme="https://itwanggj.github.io/tags/Ionic/"/>
    
  </entry>
  
  <entry>
    <title>My-article-9</title>
    <link href="https://itwanggj.github.io/2016/09/04/My-article-9/"/>
    <id>https://itwanggj.github.io/2016/09/04/My-article-9/</id>
    <published>2016-09-04T15:32:04.000Z</published>
    <updated>2017-01-08T08:54:34.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="Ionic" scheme="https://itwanggj.github.io/tags/Ionic/"/>
    
      <category term="JS" scheme="https://itwanggj.github.io/tags/JS/"/>
    
      <category term="Grunt" scheme="https://itwanggj.github.io/tags/Grunt/"/>
    
  </entry>
  
  <entry>
    <title>My-article-8</title>
    <link href="https://itwanggj.github.io/2016/08/04/My-article-8/"/>
    <id>https://itwanggj.github.io/2016/08/04/My-article-8/</id>
    <published>2016-08-04T15:32:04.000Z</published>
    <updated>2017-01-08T08:54:00.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="html" scheme="https://itwanggj.github.io/tags/html/"/>
    
      <category term="Gulp" scheme="https://itwanggj.github.io/tags/Gulp/"/>
    
      <category term="PHP" scheme="https://itwanggj.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>My-article-7</title>
    <link href="https://itwanggj.github.io/2016/07/04/My-article-7/"/>
    <id>https://itwanggj.github.io/2016/07/04/My-article-7/</id>
    <published>2016-07-04T15:32:04.000Z</published>
    <updated>2017-01-08T08:53:17.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="D3" scheme="https://itwanggj.github.io/tags/D3/"/>
    
      <category term="Github" scheme="https://itwanggj.github.io/tags/Github/"/>
    
      <category term="React" scheme="https://itwanggj.github.io/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>My-article-6</title>
    <link href="https://itwanggj.github.io/2016/06/04/My-article-6/"/>
    <id>https://itwanggj.github.io/2016/06/04/My-article-6/</id>
    <published>2016-06-04T15:32:04.000Z</published>
    <updated>2017-01-08T08:52:30.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="Bootstrap" scheme="https://itwanggj.github.io/tags/Bootstrap/"/>
    
      <category term="Ionic" scheme="https://itwanggj.github.io/tags/Ionic/"/>
    
      <category term="hexo" scheme="https://itwanggj.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>My-article-5</title>
    <link href="https://itwanggj.github.io/2016/05/04/My-article-5/"/>
    <id>https://itwanggj.github.io/2016/05/04/My-article-5/</id>
    <published>2016-05-04T15:32:04.000Z</published>
    <updated>2017-01-08T08:51:46.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="html" scheme="https://itwanggj.github.io/tags/html/"/>
    
      <category term="JS" scheme="https://itwanggj.github.io/tags/JS/"/>
    
      <category term="Gulp" scheme="https://itwanggj.github.io/tags/Gulp/"/>
    
  </entry>
  
  <entry>
    <title>前端开发面试题整理以及解答思路</title>
    <link href="https://itwanggj.github.io/2016/04/01/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E9%9D%A2%E8%AF%95%E9%A2%98%E6%95%B4%E7%90%86%E4%BB%A5%E5%8F%8A%E8%A7%A3%E7%AD%94%E6%80%9D%E8%B7%AF/"/>
    <id>https://itwanggj.github.io/2016/04/01/前端开发面试题整理以及解答思路/</id>
    <published>2016-04-01T02:32:22.000Z</published>
    <updated>2017-02-26T12:48:57.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近在网上看了各种各样的前端面试题，感觉大部分其实都知道一点，但要真正表述恐怕又不能说得很好，所以这里简单整理一下解答思路</p>
<h2 id="一、HTML基础"><a href="#一、HTML基础" class="headerlink" title="一、HTML基础"></a>一、HTML基础</h2><h3 id="对HTML5的理解"><a href="#对HTML5的理解" class="headerlink" title="对HTML5的理解"></a>对HTML5的理解</h3><p>很大的一个问题，似乎每个人都能说上一点，但再深入就很看水平了，所以整理了HTML5的新特性，答题的时候应该抓住几个点入手：</p>
<ol>
<li>新标签<br>   多媒体的新标签： vedio,audio,embed<br>   语义化的新标签： article,header,footer,nav,section,figure</li>
<li>内联svg</li>
<li>拖放事件（drop和drag）</li>
<li>支持地理定位：navigator.geolocation.getCurrentPosition(showPosition)</li>
<li>表单的新属性：autocomplete, novalidate</li>
<li>web存储：localStorage,sessionStorage(关闭浏览器窗口后数据就会被删除)</li>
<li>WebSocket协议：在单个 TCP 连接上进行全双工通讯的协议</li>
</ol>
<h3 id="Web语义化的好处"><a href="#Web语义化的好处" class="headerlink" title="Web语义化的好处"></a>Web语义化的好处</h3><ol>
<li>方便爬虫读取，有利于SEO</li>
<li>增加代码可读性</li>
<li>屏幕阅读器（如果访客有视障）会完全根据你的标记来“读”你的网页</li>
<li>丢失样式的时候还能保持结构</li>
<li>手机等设备能以有意义的方式渲染网页(它们可能对CSS支持比较弱)</li>
</ol>
<a id="more"></a>
<h3 id="SEO"><a href="#SEO" class="headerlink" title="SEO"></a>SEO</h3><ol>
<li>建立sitemap.xml</li>
<li>使用语义化的标签</li>
<li>meta的keyword和description属性</li>
<li>尽量简洁url</li>
<li>外链</li>
</ol>
<h3 id="页面加载过程"><a href="#页面加载过程" class="headerlink" title="页面加载过程"></a>页面加载过程</h3><p>浏览器开启线程处理Http请求－&gt;DNS解析域名到IP地址-&gt;进行HTTP会话，客户端发送请求报头-&gt;进入服务端（Apache,tomcat,node.js等）-&gt;根据请求进入后端应用，找到请求处理-&gt;处理回馈报头，对比最后修改时间判断是否读缓存-&gt;下载html文档－&gt;建立文档树，加载CSS，JS文件－&gt;开始渲染DOM,执行JS</p>
<h2 id="二、CSS基础"><a href="#二、CSS基础" class="headerlink" title="二、CSS基础"></a>二、CSS基础</h2><h3 id="三列布局："><a href="#三列布局：" class="headerlink" title="三列布局："></a>三列布局：</h3><p>主要思路是中间元素左右padding，左右元素设置浮动，中间元素清除浮动</p>
<h3 id="CSS3动画"><a href="#CSS3动画" class="headerlink" title="CSS3动画"></a>CSS3动画</h3><p>CSS3有两种方式设置动画：</p>
<p>animation:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">animation-name</span>: <span class="selector-tag">none</span>  </div><div class="line"><span class="selector-tag">animation-duration</span>: 0<span class="selector-tag">s</span>  </div><div class="line"><span class="selector-tag">animation-timing-function</span>: <span class="selector-tag">ease</span>  </div><div class="line"><span class="selector-tag">animation-delay</span>: 0<span class="selector-tag">s</span>  </div><div class="line"><span class="selector-tag">animation-iteration-count</span>: 1</div><div class="line"><span class="selector-tag">animation-direction</span>: <span class="selector-tag">normal</span></div><div class="line"><span class="selector-tag">animation-fill-mode</span>: <span class="selector-tag">none</span></div></pre></td></tr></table></figure></p>
<p>利用keyframe写帧动画，再animation-name中指定并调用,animation再动画结束后是不改变属性值的</p>
<h3 id="CSS3布局方案"><a href="#CSS3布局方案" class="headerlink" title="CSS3布局方案"></a>CSS3布局方案</h3><p>关于flex布局：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.box</span> &#123;</div><div class="line">     <span class="attribute">display</span>: flex;</div><div class="line">     <span class="attribute">flex-direction</span>: 主轴方向</div><div class="line">     flex-wrap: 如何换行</div><div class="line">     justify-content： 主轴上的对齐方式</div><div class="line">     align-item: 交叉轴上的对齐方式</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.item</span> &#123;</div><div class="line">    <span class="attribute">flex-grow</span>: 放大比例</div><div class="line">    flex-shrink: 缩小比例</div><div class="line">    order: 顺序</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>tranistion:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">transition-delay</span>: 0<span class="selector-tag">s</span>;</div><div class="line"><span class="selector-tag">transition-duration</span>: 0<span class="selector-tag">s</span>;</div><div class="line"><span class="selector-tag">transition-property</span>: <span class="selector-tag">all</span>;</div><div class="line"><span class="selector-tag">transition-timing-function</span>: <span class="selector-tag">ease</span>;</div></pre></td></tr></table></figure></p>
<p>两个不同状态的插值渐变过程</p>
<h3 id="CSS选择器的优先级"><a href="#CSS选择器的优先级" class="headerlink" title="CSS选择器的优先级"></a>CSS选择器的优先级</h3><p>内联样式 &gt; id &gt; (类, 伪类, 属性) &gt; (标签, 伪元素)</p>
<h3 id="一些比较特殊的选择器："><a href="#一些比较特殊的选择器：" class="headerlink" title="一些比较特殊的选择器："></a>一些比较特殊的选择器：</h3><p>E ~ F：匹配任何在E元素之后的同级F元素, CSS3新增<br>E &gt; F：子元素选择器，匹配所有E元素的子元素F<br>E + F: 毗邻元素选择器，匹配所有紧随E元素之后的同级元素F<br>E:nth-child(n): 匹配其父元素的第n个子元素，CSS3新增<br>E:nth-last-child(n): 匹配其父元素的倒数第n个子元素，CSS3新增<br>E:nth-of-type(n): 匹配其父元素的第n个同标签子元素，CSS3新增<br>E:nth-last-of-type(n): 匹配其父元素的倒数第n个同标签子元素，CSS3新增</p>
<h3 id="background-相关属性"><a href="#background-相关属性" class="headerlink" title="background-*相关属性"></a>background-*相关属性</h3><p>就记录比较冷门的一些：<br>background-origin： 规定 background-position 属性相对于什么位置来定位 （border-box|padding-box|content-box）<br>background-clip: 规定绘制区域（border-box|padding-box|content-box）<br>background-attachment: 背景图像能否随其余部分的滚动而移动（scroll|fixed|inherit）</p>
<h3 id="关于BFC"><a href="#关于BFC" class="headerlink" title="关于BFC"></a>关于BFC</h3><p>BFC的形成,满足以下条件任意一个即可</p>
<ul>
<li>float 的值不为 none</li>
<li>position 的值不为 static 或者 relative</li>
<li>display 的值为 table-cell , table-caption , inline-block , flex , 或者 inline-flex 中的其中一个</li>
<li>overflow 的值不为 visible</li>
</ul>
<h3 id="BFC的性质"><a href="#BFC的性质" class="headerlink" title="BFC的性质"></a>BFC的性质</h3><p>在BFC中，每个盒子的左外边框紧挨着包含块的左边框</p>
<p>同一个BFC子元素外边距会折叠</p>
<p>BFC可以包含浮动</p>
<h3 id="文档流"><a href="#文档流" class="headerlink" title="文档流"></a>文档流</h3><p>一旦给其中的某个DIV进行FLOAT属性或者absolute定位（不包括static/relative，这两个依然保持正常的文档流），则它完全脱离文档流，不占空间</p>
<h3 id="层级关系的比较"><a href="#层级关系的比较" class="headerlink" title="层级关系的比较"></a>层级关系的比较</h3><ol>
<li>对于同级元素, 默认 (或 position:static) 情况下文档流后面的元素会覆盖前面的</li>
<li>对于同级元素, position 不为 static 且 z-index 存在的情况下 z-index 大的元素会覆盖 z-index 小的元素, 即 z-index 越大优先级越高.</li>
</ol>
<h2 id="三、JS基础"><a href="#三、JS基础" class="headerlink" title="三、JS基础"></a>三、JS基础</h2><h3 id="关于提升"><a href="#关于提升" class="headerlink" title="关于提升"></a>关于提升</h3><p>记住一句话即可：包括变量和函数在内的所有声明都会在任何代码被执行前首先被处理</p>
<h3 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h3><p>undefined, null, string, number, boolean</p>
<h3 id="高阶函数"><a href="#高阶函数" class="headerlink" title="高阶函数"></a>高阶函数</h3><p>其实就是将函数作为参数或返回值的函数</p>
<h3 id="JSONP的原理"><a href="#JSONP的原理" class="headerlink" title="JSONP的原理"></a>JSONP的原理</h3><p>利用script标签的src没有跨域性质的特点，动态创建script标签，指定src为服务端数据api，并传入一个callback作为参数，返回的是一段javascript代码，将数据传入callback中执行</p>
<h3 id="原生ajax"><a href="#原生ajax" class="headerlink" title="原生ajax"></a>原生ajax</h3><p>xmlHttpRequest对象:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 兼容ie的xhr对象创建方法     </span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">createxhr</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">if</span>(<span class="keyword">typeof</span> XMLHttpRequest != <span class="string">"undefined"</span>) &#123;</div><div class="line"></div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">typeof</span> ActiveXObject != <span class="string">"undefined"</span>)&#123;</div><div class="line">        <span class="keyword">var</span> i,len,version=[<span class="string">"MSXML2.XMLHTTP.6.0"</span>, <span class="string">"MSXML2.XMLHTTP.3.0"</span>, <span class="string">"MSXML2.XMLHTTP"</span>];</div><div class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>,len=version.length;i&lt;len;i++)            &#123;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                <span class="keyword">new</span> ActiveXObject(version[i]);</div><div class="line">                <span class="built_in">arguments</span>.callee.activeXString = version[i];</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">catch</span>(ex) &#123;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ActiveXObject(<span class="built_in">arguments</span>.callee.activeXString);</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">"..."</span>)</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">xhr = createxhr();</div><div class="line">xhr.onreadystateChange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">if</span>(xhr.readyState == <span class="number">4</span>) &#123;</div><div class="line">        <span class="keyword">if</span>(xhr.status == <span class="number">200</span> || xhr.status == <span class="number">304</span>) &#123;</div><div class="line">            ...</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            ...</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">xhr.open(<span class="string">"get"</span>, url, <span class="literal">false</span>);</div><div class="line">xhr.send(<span class="literal">null</span>);</div></pre></td></tr></table></figure></p>
<h3 id="事件模型"><a href="#事件模型" class="headerlink" title="事件模型"></a>事件模型</h3><p>兼容ie的事件模型<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> EventUtil = &#123;</div><div class="line">    <span class="attr">addHandler</span>: <span class="function"><span class="keyword">function</span>(<span class="params">element, type, handler</span>) </span>&#123;</div><div class="line">        <span class="keyword">if</span>(element.addEventListener) &#123;</div><div class="line">            element.addEventListener(type, handler, <span class="literal">false</span>);</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(element.attachEvent) &#123;</div><div class="line">            element.attachEvent(<span class="string">"on"</span> + type, handler);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            element[<span class="string">"on"</span> + type] = handler;</div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">removeHandler</span>: <span class="function"><span class="keyword">function</span>(<span class="params">element, type, handler</span>) </span>&#123;</div><div class="line">        <span class="keyword">if</span>(element.removeEventListener) &#123;</div><div class="line">            element.removeEventListener(type, handler, <span class="literal">false</span>);</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(element.attachEvent) &#123;</div><div class="line">            element.detachEvent(<span class="string">"on"</span> + type, handler);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            element[<span class="string">"on"</span> + type] = <span class="literal">null</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line"></div><div class="line">    <span class="attr">getTarget</span>: <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">        <span class="keyword">return</span> e.target || e.srcElement;</div><div class="line">    &#125;,</div><div class="line"></div><div class="line">    <span class="attr">getEvent</span>: <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</div><div class="line">        <span class="keyword">return</span> event.target || event.srcElement;</div><div class="line">    &#125;,</div><div class="line"></div><div class="line">    <span class="attr">preventDefault</span>: <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</div><div class="line">        <span class="keyword">if</span>(event.preventDefault) &#123;</div><div class="line">            event.preventDefault();</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            event.returnValue = <span class="literal">false</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">    &#125;,</div><div class="line"></div><div class="line">    <span class="attr">stopPropagation</span>: <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</div><div class="line">        <span class="keyword">if</span>(event.stopPropagation) &#123;</div><div class="line">            event.stopPropagation();</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            event.cancelBubble = <span class="literal">true</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="AMD规范和CMD规范"><a href="#AMD规范和CMD规范" class="headerlink" title="AMD规范和CMD规范"></a>AMD规范和CMD规范</h3><p>诞生的原因：</p>
<ol>
<li>实现JS的异步加载，避免网页停止渲染</li>
<li>管理模块之间的依赖性，便于维护</li>
</ol>
<p>AMD提倡的是一种预加载，也就是说回调函数执行前模块需要全部加载好<br>CMD提倡的是延迟执行，加载模块通过在回调函数中调用require，依赖可以就近书写</p>
<h3 id="关于cookie和localstroage"><a href="#关于cookie和localstroage" class="headerlink" title="关于cookie和localstroage"></a>关于cookie和localstroage</h3><p>如何设置cookie<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">document</span>.cookie = <span class="string">"value=1"</span>;</div></pre></td></tr></table></figure></p>
<p>浏览器的cookie都有哪些字段</p>
<p>Name,Value,Domain,Path,Expires,Size</p>
<p>如何设置localstorage<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">window</span>.localStroage.a = <span class="number">3</span>;</div><div class="line">localStorage.setItem(<span class="string">"value"</span>, <span class="string">"2"</span>);</div><div class="line">localStorage.getItem(<span class="string">"value"</span>);</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近在网上看了各种各样的前端面试题，感觉大部分其实都知道一点，但要真正表述恐怕又不能说得很好，所以这里简单整理一下解答思路&lt;/p&gt;
&lt;h2 id=&quot;一、HTML基础&quot;&gt;&lt;a href=&quot;#一、HTML基础&quot; class=&quot;headerlink&quot; title=&quot;一、HTML基础&quot;&gt;&lt;/a&gt;一、HTML基础&lt;/h2&gt;&lt;h3 id=&quot;对HTML5的理解&quot;&gt;&lt;a href=&quot;#对HTML5的理解&quot; class=&quot;headerlink&quot; title=&quot;对HTML5的理解&quot;&gt;&lt;/a&gt;对HTML5的理解&lt;/h3&gt;&lt;p&gt;很大的一个问题，似乎每个人都能说上一点，但再深入就很看水平了，所以整理了HTML5的新特性，答题的时候应该抓住几个点入手：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;新标签&lt;br&gt;   多媒体的新标签： vedio,audio,embed&lt;br&gt;   语义化的新标签： article,header,footer,nav,section,figure&lt;/li&gt;
&lt;li&gt;内联svg&lt;/li&gt;
&lt;li&gt;拖放事件（drop和drag）&lt;/li&gt;
&lt;li&gt;支持地理定位：navigator.geolocation.getCurrentPosition(showPosition)&lt;/li&gt;
&lt;li&gt;表单的新属性：autocomplete, novalidate&lt;/li&gt;
&lt;li&gt;web存储：localStorage,sessionStorage(关闭浏览器窗口后数据就会被删除)&lt;/li&gt;
&lt;li&gt;WebSocket协议：在单个 TCP 连接上进行全双工通讯的协议&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;Web语义化的好处&quot;&gt;&lt;a href=&quot;#Web语义化的好处&quot; class=&quot;headerlink&quot; title=&quot;Web语义化的好处&quot;&gt;&lt;/a&gt;Web语义化的好处&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;方便爬虫读取，有利于SEO&lt;/li&gt;
&lt;li&gt;增加代码可读性&lt;/li&gt;
&lt;li&gt;屏幕阅读器（如果访客有视障）会完全根据你的标记来“读”你的网页&lt;/li&gt;
&lt;li&gt;丢失样式的时候还能保持结构&lt;/li&gt;
&lt;li&gt;手机等设备能以有意义的方式渲染网页(它们可能对CSS支持比较弱)&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="前端面试" scheme="https://itwanggj.github.io/categories/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/"/>
    
      <category term="面试题总结" scheme="https://itwanggj.github.io/categories/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/%E9%9D%A2%E8%AF%95%E9%A2%98%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="jQuery" scheme="https://itwanggj.github.io/tags/jQuery/"/>
    
      <category term="Ionic" scheme="https://itwanggj.github.io/tags/Ionic/"/>
    
      <category term="Html" scheme="https://itwanggj.github.io/tags/Html/"/>
    
      <category term="css" scheme="https://itwanggj.github.io/tags/css/"/>
    
      <category term="js" scheme="https://itwanggj.github.io/tags/js/"/>
    
      <category term="bootstrap" scheme="https://itwanggj.github.io/tags/bootstrap/"/>
    
  </entry>
  
  <entry>
    <title>Http状态码</title>
    <link href="https://itwanggj.github.io/2016/03/17/My-article-4/"/>
    <id>https://itwanggj.github.io/2016/03/17/My-article-4/</id>
    <published>2016-03-17T04:08:54.000Z</published>
    <updated>2017-02-26T07:05:45.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Http状态码"><a href="#Http状态码" class="headerlink" title="Http状态码"></a>Http状态码</h1><p>一些常见的状态代码为：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">200 - 服务器成功返回网页</div><div class="line">404 - 请求的网页不存在</div><div class="line">503 - 服务器暂时不可用</div></pre></td></tr></table></figure></p>
<h2 id="1xx（临时响应）"><a href="#1xx（临时响应）" class="headerlink" title="1xx（临时响应）"></a>1xx（临时响应）</h2><p>用于表示临时响应并需要请求者执行操作才能继续的状态代码。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">100（继续） 请求者应当继续提出请求。服务器返回此代码则意味着，服务器已收到了请求的第一部分，现正在等待接收其余部分。</div><div class="line">101（切换协议） 请求者已要求服务器切换协议，服务器已确认并准备进行切换。</div></pre></td></tr></table></figure></p>
<h2 id="2xx（成功）"><a href="#2xx（成功）" class="headerlink" title="2xx（成功）"></a>2xx（成功）</h2><p>用于表示服务器已成功处理了请求的状态代码。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">200（成功） 服务器已成功处理了请求。通常，这表示服务器提供了请求的网页。如果您的 robots.txt 文件显示为此状态，那么，这表示 Googlebot 已成功检索到该文件。</div><div class="line">201（已创建） 请求成功且服务器已创建了新的资源。</div><div class="line">202（已接受） 服务器已接受了请求，但尚未对其进行处理。</div><div class="line">203（非授权信息） 服务器已成功处理了请求，但返回了可能来自另一来源的信息。</div><div class="line">204（无内容） 服务器成功处理了请求，但未返回任何内容。</div><div class="line">205（重置内容） 服务器成功处理了请求，但未返回任何内容。与 204 响应不同，此响应要求请求者重置文档视图（例如清除表单内容以输入新内容）。</div><div class="line">206（部分内容） 服务器成功处理了部分 GET 请求。</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<h2 id="3xx（已重定向）"><a href="#3xx（已重定向）" class="headerlink" title="3xx（已重定向）"></a>3xx（已重定向）</h2><p>要完成请求，您需要进一步进行操作。通常，这些状态代码是永远重定向的。Google 建议您在每次请求时使用的重定向要少于 5 个。您可以使用网站管理员工具来查看 Googlebot 在抓取您已重定向的网页时是否会遇到问题。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">300（多种选择） 服务器根据请求可执行多种操作。服务器可根据请求者 (User agent) 来选择一项操作，或提供操作列表供请求者选择。</div><div class="line">301（永久移动） 请求的网页已被永久移动到新位置。服务器返回此响应（作为对 GET 或 HEAD 请求的响应）时，会自动将请求者转到新位置。您应使用此代码通知 Googlebot 某个网页或网站已被永久移动到新位置。</div><div class="line">302（临时移动） 服务器目前正从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求。此代码与响应 GET 和 HEAD 请求的 301 代码类似，会自动将请求者转到不同的位置。但由于 Googlebot 会继续抓取原有位置并将其编入索引，因此您不应使用此代码来通知 Googlebot 某个页面或网站已被移动。</div><div class="line">303（查看其他位置） 当请求者应对不同的位置进行单独的 GET 请求以检索响应时，服务器会返回此代码。对于除 HEAD 请求之外的所有请求，服务器会自动转到其他位置。</div><div class="line">304（未修改） </div><div class="line">自从上次请求后，请求的网页未被修改过。服务器返回此响应时，不会返回网页内容。</div><div class="line">如果网页自请求者上次请求后再也没有更改过，您应当将服务器配置为返回此响应（称为 If-Modified-Since HTTP 标头）。由于服务器可以告诉 Googlebot 自从上次抓取后网页没有更改过，因此可节省带宽和开销</div><div class="line">305（使用代理） 请求者只能使用代理访问请求的网页。如果服务器返回此响应，那么，服务器还会指明请求者应当使用的代理。</div><div class="line">307（临时重定向） 服务器目前正从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求。此代码与响应 GET 和 HEAD 请求的 301 代码类似，会自动将请求者转到不同的位置。但由于 Googlebot 会继续抓取原有位置并将其编入索引，因此您不应使用此代码来通知 Googlebot 某个页面或网站已被移动。</div></pre></td></tr></table></figure></p>
<h2 id="4xx（请求错误）"><a href="#4xx（请求错误）" class="headerlink" title="4xx（请求错误）"></a>4xx（请求错误）</h2><p>这些状态代码表示，请求可能出错，已妨碍了服务器对请求的处理。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">400（错误请求） 服务器不理解请求的语法。</div><div class="line">401（未授权） 请求要求进行身份验证。登录后，服务器可能会返回对页面的此响应。</div><div class="line">403（已禁止） 服务器拒绝请求。如果在 Googlebot 尝试抓取您网站上的有效网页时显示此状态代码（您可在 Google 网站管理员工具中诊断下的网络抓取页面上看到此状态代码），那么，这可能是您的服务器或主机拒绝 Googlebot 对其进行访问。</div><div class="line">404（未找到） </div><div class="line">服务器找不到请求的网页。例如，如果请求是针对服务器上不存在的网页进行的，那么，服务器通常会返回此代码。</div><div class="line">如然而，如果您有 robots.txt 文件而又发现了此状态，那么，这说明您的 robots.txt 文件可能是命名错误或位于错误的位置。（该文件应当位于顶级域名上，且应当名为 robots.txt）。</div><div class="line">如果您在 Googlebot 尝试抓取的网址上发现此状态（位于<span class="string">"诊断"</span>标签的 HTTP 错误页上），那么，这表示 Googlebot 所追踪的可能是另一网页中的无效链接（旧链接或输入有误的链接）。</div><div class="line">405（方法禁用） 禁用请求中所指定的方法。</div><div class="line">406（不接受） 无法使用请求的内容特性来响应请求的网页。</div><div class="line">407（需要代理授权） 此状态代码与 401（未授权）类似，但却指定了请求者应当使用代理进行授权。如果服务器返回此响应，那么，服务器还会指明请求者应当使用的代理。</div><div class="line">408（请求超时） 服务器等候请求时超时。</div><div class="line">409（冲突） 服务器在完成请求时发生冲突。服务器必须包含有关响应中所发生的冲突的信息。服务器在响应与前一个请求相冲突的 PUT 请求时可能会返回此代码，同时会提供两个请求的差异列表。</div><div class="line">410（已删除） 如果请求的资源已被永久删除，那么，服务器会返回此响应。该代码与 404（未找到）代码类似，但在资源以前有但现在已经不复存在的情况下，有时会替代 404 代码出现。如果资源已被永久删除，那么，您应当使用 301 代码指定该资源的新位置。</div><div class="line">411（需要有效长度） 服务器不会接受包含无效内容长度标头字段的请求。</div><div class="line">412（未满足前提条件） 服务器未满足请求者在请求中设置的其中一个前提条件。</div><div class="line">413（请求实体过大） 服务器无法处理请求，因为请求实体过大，已超出服务器的处理能力。</div><div class="line">414（请求的 URI 过长） 请求的 URI（通常为网址）过长，服务器无法进行处理。</div><div class="line">415（不支持的媒体类型） 请求的格式不受请求页面的支持。</div><div class="line">416（请求范围不符合要求） 如果请求是针对网页的无效范围进行的，那么，服务器会返回此状态代码。</div><div class="line">417（未满足期望值） 服务器未满足<span class="string">"期望"</span>请求标头字段的要求。</div></pre></td></tr></table></figure></p>
<h2 id="5xx（服务器错误）"><a href="#5xx（服务器错误）" class="headerlink" title="5xx（服务器错误）"></a>5xx（服务器错误）</h2><p>这些状态代码表示，服务器在尝试处理请求时发生内部错误。这些错误可能是服务器本身的错误，而不是请求出错。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">500（服务器内部错误） 服务器遇到错误，无法完成请求。</div><div class="line">501（尚未实施） 服务器不具备完成请求的功能。例如，当服务器无法识别请求方法时，服务器可能会返回此代码。</div><div class="line">502（错误网关） 服务器作为网关或代理，从上游服务器收到了无效的响应。</div><div class="line">503（服务不可用） 目前无法使用服务器（由于超载或进行停机维护）。通常，这只是一种暂时的状态。</div><div class="line">504（网关超时） 服务器作为网关或代理，未及时从上游服务器接收请求。</div><div class="line">505（HTTP 版本不受支持） 服务器不支持请求中所使用的 HTTP 协议版本。</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Http状态码&quot;&gt;&lt;a href=&quot;#Http状态码&quot; class=&quot;headerlink&quot; title=&quot;Http状态码&quot;&gt;&lt;/a&gt;Http状态码&lt;/h1&gt;&lt;p&gt;一些常见的状态代码为：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;200 - 服务器成功返回网页&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;404 - 请求的网页不存在&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;503 - 服务器暂时不可用&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;1xx（临时响应）&quot;&gt;&lt;a href=&quot;#1xx（临时响应）&quot; class=&quot;headerlink&quot; title=&quot;1xx（临时响应）&quot;&gt;&lt;/a&gt;1xx（临时响应）&lt;/h2&gt;&lt;p&gt;用于表示临时响应并需要请求者执行操作才能继续的状态代码。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;100（继续） 请求者应当继续提出请求。服务器返回此代码则意味着，服务器已收到了请求的第一部分，现正在等待接收其余部分。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;101（切换协议） 请求者已要求服务器切换协议，服务器已确认并准备进行切换。&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;2xx（成功）&quot;&gt;&lt;a href=&quot;#2xx（成功）&quot; class=&quot;headerlink&quot; title=&quot;2xx（成功）&quot;&gt;&lt;/a&gt;2xx（成功）&lt;/h2&gt;&lt;p&gt;用于表示服务器已成功处理了请求的状态代码。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;200（成功） 服务器已成功处理了请求。通常，这表示服务器提供了请求的网页。如果您的 robots.txt 文件显示为此状态，那么，这表示 Googlebot 已成功检索到该文件。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;201（已创建） 请求成功且服务器已创建了新的资源。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;202（已接受） 服务器已接受了请求，但尚未对其进行处理。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;203（非授权信息） 服务器已成功处理了请求，但返回了可能来自另一来源的信息。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;204（无内容） 服务器成功处理了请求，但未返回任何内容。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;205（重置内容） 服务器成功处理了请求，但未返回任何内容。与 204 响应不同，此响应要求请求者重置文档视图（例如清除表单内容以输入新内容）。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;206（部分内容） 服务器成功处理了部分 GET 请求。&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="HTTP状态码" scheme="https://itwanggj.github.io/categories/HTTP%E7%8A%B6%E6%80%81%E7%A0%81/"/>
    
      <category term="Ajax请求" scheme="https://itwanggj.github.io/categories/HTTP%E7%8A%B6%E6%80%81%E7%A0%81/Ajax%E8%AF%B7%E6%B1%82/"/>
    
    
      <category term="Http" scheme="https://itwanggj.github.io/tags/Http/"/>
    
      <category term="ajax" scheme="https://itwanggj.github.io/tags/ajax/"/>
    
      <category term="404" scheme="https://itwanggj.github.io/tags/404/"/>
    
  </entry>
  
  <entry>
    <title>JS代码让Markdown自动生成目录</title>
    <link href="https://itwanggj.github.io/2016/03/03/JS%E4%BB%A3%E7%A0%81%E8%AE%A9Markdown%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E7%9B%AE%E5%BD%95/"/>
    <id>https://itwanggj.github.io/2016/03/03/JS代码让Markdown自动生成目录/</id>
    <published>2016-03-03T12:32:04.000Z</published>
    <updated>2017-02-26T06:41:31.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>已经习惯了使用Markdown书写文章，既方便也通用。<br>但一直在想：应该生成一个方便的导航目录，这样查看文章更方便。于是有了本文。</p>
<h2 id="实现方法"><a href="#实现方法" class="headerlink" title="实现方法"></a>实现方法</h2><h3 id="页面结构"><a href="#页面结构" class="headerlink" title="页面结构"></a>页面结构</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">//放入在文章页内容前面</div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"BlogAnchor"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">b</span> <span class="attr">id</span>=<span class="string">"AnchorContentToggle"</span> <span class="attr">title</span>=<span class="string">"收起"</span> <span class="attr">style</span>=<span class="string">"cursor:pointer;"</span>&gt;</span>目录[-]<span class="tag">&lt;/<span class="name">b</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"AnchorContent"</span> <span class="attr">id</span>=<span class="string">"AnchorContent"</span>&gt;</span> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="JS代码"><a href="#JS代码" class="headerlink" title="JS代码"></a>JS代码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//在文章中查找title并填充到div AnchorContent中</span></div><div class="line">$(<span class="string">".post-content"</span>).find(<span class="string">"h2,h3,h4,h5,h6"</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">i,item</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> tag = $(item).get(<span class="number">0</span>).localName;</div><div class="line">    $(item).attr(<span class="string">"id"</span>,<span class="string">"wow"</span>+i);</div><div class="line">    $(<span class="string">"#AnchorContent"</span>).append(<span class="string">'&lt;li&gt;&lt;a class="new'</span>+tag+<span class="string">' anchor-link" onclick="return false;" href="#" link="#wow'</span>+i+<span class="string">'"&gt;'</span>+(i+<span class="number">1</span>)+<span class="string">" · "</span>+$(<span class="keyword">this</span>).text()+<span class="string">'&lt;/a&gt;&lt;/li&gt;'</span>);</div><div class="line">    $(<span class="string">".newh2"</span>).css(<span class="string">"margin-left"</span>,<span class="number">0</span>);</div><div class="line">    $(<span class="string">".newh3"</span>).css(<span class="string">"margin-left"</span>,<span class="number">20</span>);</div><div class="line">    $(<span class="string">".newh4"</span>).css(<span class="string">"margin-left"</span>,<span class="number">40</span>);</div><div class="line">    $(<span class="string">".newh5"</span>).css(<span class="string">"margin-left"</span>,<span class="number">60</span>);</div><div class="line">    $(<span class="string">".newh6"</span>).css(<span class="string">"margin-left"</span>,<span class="number">80</span>);</div><div class="line">&#125;);</div><div class="line">$(<span class="string">"#AnchorContentToggle"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> text = $(<span class="keyword">this</span>).html();</div><div class="line">    <span class="keyword">if</span>(text==<span class="string">"目录[-]"</span>)&#123;</div><div class="line">        $(<span class="keyword">this</span>).html(<span class="string">"目录[+]"</span>);</div><div class="line">        $(<span class="keyword">this</span>).attr(&#123;<span class="string">"title"</span>:<span class="string">"展开"</span>&#125;);</div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">        $(<span class="keyword">this</span>).html(<span class="string">"目录[-]"</span>);</div><div class="line">        $(<span class="keyword">this</span>).attr(&#123;<span class="string">"title"</span>:<span class="string">"收起"</span>&#125;);</div><div class="line">    &#125;</div><div class="line">    $(<span class="string">"#AnchorContent"</span>).toggle();</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="CSS代码"><a href="#CSS代码" class="headerlink" title="CSS代码"></a>CSS代码</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*导航*/</span></div><div class="line"><span class="selector-class">.BlogAnchor</span> &#123;</div><div class="line">    <span class="attribute">background</span>: <span class="number">#f4f7f9</span>;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">10px</span>;</div><div class="line">    <span class="attribute">line-height</span>: <span class="number">180%</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.BlogAnchor</span> <span class="selector-tag">p</span> &#123;</div><div class="line">    <span class="attribute">font-size</span>: <span class="number">18px</span>;</div><div class="line">    <span class="attribute">color</span>: <span class="number">#15a230</span>;</div><div class="line">    <span class="attribute">margin-bottom</span>: <span class="number">0.3em</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.BlogAnchor</span> <span class="selector-class">.AnchorContent</span> &#123;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">0px</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.BlogAnchor</span> <span class="selector-tag">li</span>&#123;</div><div class="line">    <span class="attribute">text-indent</span>: <span class="number">20px</span>;</div><div class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-id">#AnchorContentToggle</span> &#123;</div><div class="line">    <span class="attribute">font-size</span>: <span class="number">13px</span>;</div><div class="line">    <span class="attribute">font-weight</span>: normal;</div><div class="line">    <span class="attribute">color</span>: <span class="number">#FFF</span>;</div><div class="line">    <span class="attribute">display</span>: inline-block;</div><div class="line">    <span class="attribute">line-height</span>: <span class="number">20px</span>;</div><div class="line">    <span class="attribute">background</span>: <span class="number">#5cc26f</span>;</div><div class="line">    <span class="attribute">font-style</span>: normal;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">1px</span> <span class="number">8px</span>;</div><div class="line">    <span class="attribute">margin-right</span>: <span class="number">10px</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.BlogAnchor</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</div><div class="line">    <span class="attribute">color</span>: <span class="number">#5cc26f</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.BlogAnchor</span> <span class="selector-tag">a</span> &#123;</div><div class="line">    <span class="attribute">text-decoration</span>: none;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="导航扩展"><a href="#导航扩展" class="headerlink" title="导航扩展"></a>导航扩展</h3><p>同时也可以实现锚点之间的平滑滚动，使用jquery animate<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">".anchor-link"</span>).click(<span class="function"><span class="title">function</span></span>()&#123;</div><div class="line">    $(<span class="string">"html,body"</span>).animate(&#123;scrollTop: $($(this).attr(<span class="string">"link"</span>)).offset().top&#125;, 1000);</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;已经习惯了使用Markdown书写文章，既方便也通用。&lt;br&gt;但一直在想：应该生成一个方便的导航目录，这样查看文章更方便。于是有了本文。&lt;/p&gt;
&lt;h2 id=&quot;实现方法&quot;&gt;&lt;a href=&quot;#实现方法&quot; class=&quot;headerlink&quot; title=&quot;实现方法&quot;&gt;&lt;/a&gt;实现方法&lt;/h2&gt;&lt;h3 id=&quot;页面结构&quot;&gt;&lt;a href=&quot;#页面结构&quot; class=&quot;headerlink&quot; title=&quot;页面结构&quot;&gt;&lt;/a&gt;页面结构&lt;/h3&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;//放入在文章页内容前面&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;BlogAnchor&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;AnchorContentToggle&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;title&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;收起&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;cursor:pointer;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;目录[-]&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;b&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;AnchorContent&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;AnchorContent&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Markdown" scheme="https://itwanggj.github.io/categories/Markdown/"/>
    
      <category term="hexo目录" scheme="https://itwanggj.github.io/categories/Markdown/hexo%E7%9B%AE%E5%BD%95/"/>
    
    
      <category term="HEXO" scheme="https://itwanggj.github.io/tags/HEXO/"/>
    
      <category term="Markdown" scheme="https://itwanggj.github.io/tags/Markdown/"/>
    
      <category term="JavaScript" scheme="https://itwanggj.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>使用GitHub + Hexo搭建博客（Mac版）</title>
    <link href="https://itwanggj.github.io/2016/02/21/%E4%BD%BF%E7%94%A8GitHub%20+%20Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://itwanggj.github.io/2016/02/21/使用GitHub + Hexo搭建博客/</id>
    <published>2016-02-21T10:32:04.000Z</published>
    <updated>2017-02-26T06:41:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><p>从<a href="https://nodejs.org/en/" style="text-decoration:none;" target="_blank" rel="external">Node.js官网</a>按其提示安装，安装成功后如下图：<br><img src="https://maoqiq.github.io/images/01/01_01nodejs.png" alt=""><br>安装成功的Node.js和npm都被安装到了/usr/local/bin目录下，可对其进行测试，看Node.js和npm是否可用：<br>查看Node.js的版本号：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">node -v</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>Node.js成功安装，可看到如下类似的信息：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ node -v </div><div class="line">v6.2.0</div></pre></td></tr></table></figure></p>
<p>查看npm的版本号：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm -v</div></pre></td></tr></table></figure></p>
<p>npm成功安装，可看到如下类似的信息：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ npm -v </div><div class="line">3.8.9</div></pre></td></tr></table></figure></p>
<h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><p>Xcode自带Git，查看Git版本号：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git version</div></pre></td></tr></table></figure></p>
<p>本地已安装git，可看到如下类似的信息：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git version </div><div class="line">git version 2.5.4 (Apple Git-61)</div></pre></td></tr></table></figure></p>
<h2 id="安装设置Hexo"><a href="#安装设置Hexo" class="headerlink" title="安装设置Hexo"></a>安装设置Hexo</h2><p>安装hexo<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo npm install -g hexo</div></pre></td></tr></table></figure></p>
<p>查看hexo版本号<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo version</div></pre></td></tr></table></figure></p>
<p>创建项目<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo init Hexo</div></pre></td></tr></table></figure></p>
<p>进入目录（Mac版本hexo文件需搭建在user同一层，通过“工具栏”前往“上一层”进行访问）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> hexo</div></pre></td></tr></table></figure></p>
<p>初始化项目<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo init</div></pre></td></tr></table></figure></p>
<p>安装依赖包<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install</div></pre></td></tr></table></figure></p>
<p>启动服务（以后所有命令均在hexo文件夹下运行）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo server</div></pre></td></tr></table></figure></p>
<p>用浏览器打开 <a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a> 或者 <a href="http://127.0.0.1:4000/" target="_blank" rel="external">http://127.0.0.1:4000/</a> 即可进行预览<br>推荐使用Chrome浏览器获得最佳效果</p>
<p>按 Ctrl+C 停止本地预览</p>
<h3 id="博客部署到github"><a href="#博客部署到github" class="headerlink" title="博客部署到github"></a>博客部署到github</h3><p>1&nbsp;&nbsp;在终端cd进入hexo文件夹，输入以下命令安装git部署器：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo npm install hexo-deployer-git --save</div></pre></td></tr></table></figure></p>
<p>2&nbsp;&nbsp;修改根目录下的站点配置文件_config.yml，博主直接使用sublime打开hexo文件夹下的_config.yml文件，在文件末尾修改如下内容，然后保存：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  <span class="built_in">type</span>: git</div><div class="line">  repo: https://github.com/maoqiq/maoqiq.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure></p>
<p><strong style="color:#f5871f;">注：</strong><code>itwanggj</code>改为<code>your_username</code>，即你的github博客仓库的网址，如下图所示：</p>
<p><img src="https://maoqiq.github.io/images/01/01_11githubHttp.JPG" alt=""><br><strong style="color:#f5871f;">注：</strong>在配置所有配置文件_config.yml时，所有<code>:</code>冒号后都要加一个”空格”</p>
<p>3&nbsp;&nbsp;在hexo目录下，生成静态页面：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo generate</div></pre></td></tr></table></figure></p>
<p>4&nbsp;&nbsp;执行部署命令，如果没有关联github，执行时终端会提示输入github的用户名和密码，输入后等待执行成功：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo deploy</div></pre></td></tr></table></figure></p>
<p>正在执行<code>hexo deploy</code>中的终端如下图所示：</p>
<p><img src="https://maoqiq.github.io/images/01/01_12hexoDeploy.png" alt=""><br><code>hexo deploy</code>命令执行成功后，在浏览器使用网址<a href="https://maoqiq.github.io/" style="text-decoration:none;" target="_blank" rel="external">https://itwanggj.github.io/</a>打开页面，与本地预览的效果相同，则部署成功，成功页面如下图所示：</p>
<p><img src="https://maoqiq.github.io/images/01/01_13httpPage.png" alt=""></p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">.</div><div class="line">├── .deploy       <span class="comment">#需要部署的文件</span></div><div class="line">├── node_modules  <span class="comment">#Hexo插件</span></div><div class="line">├── public        <span class="comment">#生成的静态网页文件</span></div><div class="line">├── scaffolds     <span class="comment">#模板</span></div><div class="line">├── <span class="built_in">source</span>        <span class="comment">#博客正文和其他源文件，404、favicon、CNAME 都应该放在这里</span></div><div class="line">|   ├── _drafts   <span class="comment">#草稿</span></div><div class="line">|   └── _posts    <span class="comment">#文章</span></div><div class="line">├── themes        <span class="comment">#主题</span></div><div class="line">├── _config.yml   <span class="comment">#全局配置文件</span></div><div class="line">└── package.json</div></pre></td></tr></table></figure>
<h2 id="全局配置-config-yml"><a href="#全局配置-config-yml" class="headerlink" title="全局配置(_config.yml)"></a>全局配置(_config.yml)</h2><h3 id="注：全局配置文件即为hexo根目录的-config-yml-要区别于主题文件中的-config-yml"><a href="#注：全局配置文件即为hexo根目录的-config-yml-要区别于主题文件中的-config-yml" class="headerlink" title="注：全局配置文件即为hexo根目录的_config.yml(要区别于主题文件中的_config.yml)"></a>注：全局配置文件即为hexo根目录的_config.yml(要区别于主题文件中的_config.yml)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Hexo Configuration</span></div><div class="line"><span class="comment">## Docs: http://hexo.io/docs/configuration.html</span></div><div class="line"><span class="comment">## Source: https://github.com/hexojs/hexo/</span></div><div class="line"><span class="comment"># Site #站点信息</span></div><div class="line">title: GuojunWang<span class="string">'s Blog #标题</span></div><div class="line">subtitle: 王国军博客 #副标题</div><div class="line">description: GuojunWang's blog <span class="comment">#站点描述，给搜索引擎看的</span></div><div class="line">author: 王国军 <span class="comment">#作者</span></div><div class="line">email:  <span class="comment">#电子邮箱</span></div><div class="line">language: zh-CN <span class="comment">#语言</span></div><div class="line"><span class="comment"># URL #链接格式</span></div><div class="line">url: https://itwanggj.github.io/ <span class="comment">#网址</span></div><div class="line">root: / <span class="comment">#根目录</span></div><div class="line">permalink: :year/:month/:day/:title/ <span class="comment">#文章的链接格式</span></div><div class="line">tag_dir: tags <span class="comment">#标签目录</span></div><div class="line">archive_dir: archives <span class="comment">#存档目录</span></div><div class="line">category_dir: categories <span class="comment">#分类目录</span></div><div class="line">code_dir: downloads/code</div><div class="line">permalink_defaults:</div><div class="line"><span class="comment"># Directory #目录</span></div><div class="line">source_dir: <span class="built_in">source</span> <span class="comment">#源文件目录</span></div><div class="line">public_dir: public <span class="comment">#生成的网页文件目录</span></div><div class="line"><span class="comment"># Writing #写作</span></div><div class="line">new_post_name: :title.md <span class="comment">#新文章标题</span></div><div class="line">default_layout: post <span class="comment">#默认的模板，包括 post、page、photo、draft（文章、页面、照片、草稿）</span></div><div class="line">titlecase: <span class="literal">false</span> <span class="comment">#标题转换成大写</span></div><div class="line">external_link: <span class="literal">true</span> <span class="comment">#在新选项卡中打开连接</span></div><div class="line">filename_case: 0</div><div class="line">render_drafts: <span class="literal">false</span></div><div class="line">post_asset_folder: <span class="literal">false</span></div><div class="line">relative_link: <span class="literal">false</span></div><div class="line">highlight: <span class="comment">#语法高亮</span></div><div class="line">  <span class="built_in">enable</span>: <span class="literal">true</span> <span class="comment">#是否启用</span></div><div class="line">  line_number: <span class="literal">true</span> <span class="comment">#显示行号</span></div><div class="line">  tab_replace:</div><div class="line"><span class="comment"># Category &amp; Tag #分类和标签</span></div><div class="line">default_category: uncategorized <span class="comment">#默认分类</span></div><div class="line">category_map:</div><div class="line">tag_map:</div><div class="line"><span class="comment"># Archives</span></div><div class="line">2: 开启分页</div><div class="line">1: 禁用分页</div><div class="line">0: 全部禁用</div><div class="line">archive: 2</div><div class="line">category: 2</div><div class="line">tag: 2</div><div class="line"><span class="comment"># Server #本地服务器</span></div><div class="line">port: 4000 <span class="comment">#端口号</span></div><div class="line">server_ip: localhost <span class="comment">#IP 地址</span></div><div class="line">logger: <span class="literal">false</span></div><div class="line">logger_format: dev</div><div class="line"><span class="comment"># Date / Time format #日期时间格式</span></div><div class="line">date_format: YYYY-MM-DD <span class="comment">#参考http://momentjs.com/docs/#/displaying/format/</span></div><div class="line">time_format: H:mm:ss</div><div class="line"><span class="comment"># Pagination #分页</span></div><div class="line">per_page: 10 <span class="comment">#每页文章数，设置成 0 禁用分页</span></div><div class="line">pagination_dir: page</div><div class="line"><span class="comment"># Disqus #Disqus评论，替换为多说</span></div><div class="line">disqus_shortname:</div><div class="line"><span class="comment"># Extensions #拓展插件</span></div><div class="line">theme: landscape-plus <span class="comment">#主题</span></div><div class="line">exclude_generator:</div><div class="line">plugins: <span class="comment">#插件，例如生成 RSS 和站点地图的</span></div><div class="line">- hexo-generator-feed</div><div class="line">- hexo-generator-sitemap</div><div class="line"><span class="comment"># Deployment #部署，将 itwanggj 改成用户名</span></div><div class="line">deploy:</div><div class="line">  <span class="built_in">type</span>: git</div><div class="line">  repo: https://github.com/itwanggj/itwanggj.github.io.git</div></pre></td></tr></table></figure>
<h3 id="命令行的使用"><a href="#命令行的使用" class="headerlink" title="命令行的使用"></a>命令行的使用</h3><p>常用命令行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">hexo <span class="built_in">help</span> <span class="comment">#查看帮助</span></div><div class="line">hexo init <span class="comment">#初始化一个目录</span></div><div class="line">hexo new <span class="string">"postName"</span> <span class="comment">#新建文章</span></div><div class="line">hexo new page <span class="string">"pageName"</span> <span class="comment">#新建页面</span></div><div class="line">hexo generate <span class="comment">#生成网页，可以在 public 目录查看整个网站的文件</span></div><div class="line">hexo server <span class="comment">#本地预览，'Ctrl+C'关闭</span></div><div class="line">hexo deploy <span class="comment">#部署.deploy目录</span></div><div class="line">hexo clean <span class="comment">#清除缓存，**强烈建议每次执行命令前先清理缓存，每次部署前先删除 .deploy 文件夹**</span></div></pre></td></tr></table></figure></p>
<p>复合命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo deploy -g</div><div class="line">hexo server -g</div></pre></td></tr></table></figure></p>
<p>命令简写<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">hexo n == hexo new</div><div class="line">hexo g == hexo generate</div><div class="line">hexo s == hexo server</div><div class="line">hexo d == hexo deploy</div></pre></td></tr></table></figure></p>
<p>安装插件命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">npm install &lt;plugin-name&gt; --save</div><div class="line">npm update <span class="comment">#升级</span></div><div class="line">npm uninstall &lt;plugin-name&gt; <span class="comment">#卸载</span></div></pre></td></tr></table></figure></p>
<p>安装主题，为主题的 git 仓库，为要存放在本地的目录名<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">clone</span> &lt;repository&gt; themes/&lt;theme-name&gt;</div></pre></td></tr></table></figure></p>
<h3 id="编辑文章"><a href="#编辑文章" class="headerlink" title="编辑文章"></a>编辑文章</h3><p>新建文章<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo new <span class="string">"标题"</span></div></pre></td></tr></table></figure></p>
<p>在 _posts 目录下会生成文件标题.md<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">title: 标题</div><div class="line">date: 2014-11-11 11:11:11</div><div class="line">tags:</div><div class="line">- 标签1</div><div class="line">- 标签2</div><div class="line">- 标签3</div><div class="line">categories: [分类1,分类2,分类3]</div><div class="line">---</div><div class="line">正文，使用Markdown语法书写</div></pre></td></tr></table></figure></p>
<p>注：编辑完之后进行保存，hexo server进行预览</p>
<h2 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h2><p>以发布到 Github 为例</p>
<p>编辑全局配置文件 _config.yml 中的 deploy 部分，itwanggj为用户名<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  <span class="built_in">type</span>: git</div><div class="line">  repo: https://github.com/itwanggj/itwanggj.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure></p>
<p>或者<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  <span class="built_in">type</span>: git</div><div class="line">  repository: git@github.com:itwanggj/itwanggj.github.com.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure></p>
<h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo d</div></pre></td></tr></table></figure>
<p>如果出现以下提示，说明部署成功<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[info] Deploy done: github</div></pre></td></tr></table></figure></p>
<h2 id="博客优化"><a href="#博客优化" class="headerlink" title="博客优化"></a>博客优化</h2><h3 id="配置主题"><a href="#配置主题" class="headerlink" title="配置主题"></a>配置主题</h3><p>下载主题</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone &lt;repository&gt; themes/&lt;theme-name&gt;</div></pre></td></tr></table></figure>
<p>也可以手动下载后解压到 themes 目录</p>
<p>在全局配置文件 _config.yml 中 theme 一行改成想要的主题</p>
<p>主题目录结构<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">.</div><div class="line">├── languages          <span class="comment">#国际化</span></div><div class="line">|   ├── default.yml    <span class="comment">#默认</span></div><div class="line">|   └── zh-CN.yml      <span class="comment">#中文</span></div><div class="line">├── layout             <span class="comment">#布局</span></div><div class="line">|   ├── _partial       <span class="comment">#局部的布局</span></div><div class="line">|   └── _widget        <span class="comment">#小挂件的布局</span></div><div class="line">├── script             <span class="comment">#js脚本</span></div><div class="line">├── <span class="built_in">source</span>             <span class="comment">#源代码文件</span></div><div class="line">|   ├── css            <span class="comment">#CSS</span></div><div class="line">|   |   ├── _base      <span class="comment">#基础CSS</span></div><div class="line">|   |   ├── _partial   <span class="comment">#局部CSS</span></div><div class="line">|   |   ├── fonts      <span class="comment">#字体</span></div><div class="line">|   |   ├── images     <span class="comment">#图片</span></div><div class="line">|   |   └── style.styl <span class="comment">#style.css</span></div><div class="line">|   ├── fancybox       <span class="comment">#fancybox</span></div><div class="line">|   └── js             <span class="comment">#js</span></div><div class="line">├── _config.yml        <span class="comment">#主题配置文件</span></div><div class="line">└── README.md          <span class="comment">#主题介绍</span></div></pre></td></tr></table></figure></p>
<p>以下是主题 landscape-plus 的配置文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Header #顶部导航</span></div><div class="line">menu:</div><div class="line">  Home: / <span class="comment">#主页</span></div><div class="line">  Archives: /archives <span class="comment">#存档</span></div><div class="line">  About: /about <span class="comment">#关于</span></div><div class="line">rss: /atom.xml <span class="comment">#RSS 订阅</span></div><div class="line"><span class="comment"># Content</span></div><div class="line">excerpt_link: 阅读全文 <span class="comment">#"Read More"要显示的文字</span></div><div class="line">fancybox: <span class="literal">true</span> <span class="comment">#fancybox 看图效果</span></div><div class="line"><span class="comment"># Sidebar #侧边栏</span></div><div class="line">sidebar: right <span class="comment">#位置，右边</span></div><div class="line">widgets:</div><div class="line">- weibo</div><div class="line">- recent_posts</div><div class="line">- recent_comments</div><div class="line">- recent_visitors</div><div class="line">- archive</div><div class="line">- category</div><div class="line">- tag</div><div class="line">- tagcloud</div><div class="line"><span class="comment">#- links #在 widget 前加"#"禁用</span></div><div class="line"><span class="comment"># Links #友情链接</span></div><div class="line">links:</div><div class="line">  Hexo: http://hexo.io</div><div class="line"><span class="comment"># Miscellaneous</span></div><div class="line">google_analytics: UA-xxxxxxxx-1 <span class="comment">#Google Analytics ID</span></div><div class="line">favicon: /favicon.ico <span class="comment">#favicon 路径</span></div><div class="line">twitter: itwanggj</div><div class="line">google_plus: </div><div class="line">fb_admins: </div><div class="line">fb_app_id: </div><div class="line"><span class="comment"># Duoshuo #多说通用代码</span></div><div class="line">duoshuo_shortname:</div><div class="line"><span class="comment"># Baidu share #百度分享</span></div><div class="line">baidushare: <span class="literal">true</span></div></pre></td></tr></table></figure></p>
<p>博主使用的是paperbox主题，以下是paperbox主题的配置文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Header</span></div><div class="line">menu:</div><div class="line">  Home: /</div><div class="line">  Archives: /archives</div><div class="line">  About: /about</div><div class="line">rss: /atom.xml</div><div class="line">github: https://github.com/itwanggj</div><div class="line">logo_title: 前端</div><div class="line">blog_title: Guojun Wang<span class="string">'s Blog</span></div><div class="line"></div><div class="line"># Content</div><div class="line">excerpt_link: Read More</div><div class="line">fancybox: true</div><div class="line">mathjax: false</div><div class="line"></div><div class="line"># Sidebar</div><div class="line">sidebar: right</div><div class="line">widgets:</div><div class="line">- recent_posts</div><div class="line">- tag</div><div class="line">- archive</div><div class="line">- tagcloud</div><div class="line">- links</div><div class="line">- categories</div><div class="line"></div><div class="line"></div><div class="line"># Miscellaneous</div><div class="line">wx_block: false</div><div class="line">google_analytics:</div><div class="line">favicon: favicon.png</div><div class="line">twitter:</div><div class="line">google_plus:</div><div class="line">fb_admins:</div><div class="line">fb_app_id:</div><div class="line"></div><div class="line"># Duoshuo</div><div class="line">duoshuo_shortname: itwanggj</div><div class="line">duoshuo_share: true</div><div class="line"></div><div class="line"># Swiftype Search</div><div class="line">swiftype_key:</div></pre></td></tr></table></figure></p>
<p>评论<br>在 Disqus官网 申请新网站的 shortname<br>配置 _config.yml 文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">disqus_shortname: xxxxxxxx</div></pre></td></tr></table></figure></p>
<p>替换为多说，landscape-plus 已经配置好了多说，填写duoshuo_shortname即可</p>
<h3 id="RSS-订阅"><a href="#RSS-订阅" class="headerlink" title="RSS 订阅"></a>RSS 订阅</h3><p>安装插件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-feed</div></pre></td></tr></table></figure></p>
<p>全局配置文件开启插件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">plugins:</div><div class="line">- hexo-generator-feed</div></pre></td></tr></table></figure></p>
<p>主题配置文件添加入口<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rss: /atom.xml</div></pre></td></tr></table></figure></p>
<p>浏览<a href="http://localhost:4000/atom.xml" target="_blank" rel="external">http://localhost:4000/atom.xml</a>查看是否生效</p>
<h3 id="Sitemap-网站地图"><a href="#Sitemap-网站地图" class="headerlink" title="Sitemap 网站地图"></a>Sitemap 网站地图</h3><p>安装插件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-sitemap</div></pre></td></tr></table></figure></p>
<p>开启插件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">plugins:</div><div class="line">- hexo-generator-sitemap</div></pre></td></tr></table></figure></p>
<p>浏览<a href="http://localhost:4000/atom.xml" target="_blank" rel="external">http://localhost:4000/atom.xml</a>查看是否生效</p>
<h3 id="文章摘要"><a href="#文章摘要" class="headerlink" title="文章摘要"></a>文章摘要</h3><p>在摘要内容后面插入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;!--more--&gt;</div></pre></td></tr></table></figure></p>
<p>可以在主题的配置文件中设置要显示的文字<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">excerpt_link: 阅读全文</div></pre></td></tr></table></figure></p>
<h3 id="图片显示"><a href="#图片显示" class="headerlink" title="图片显示"></a>图片显示</h3><p>把图片放到 source/images 目录下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">![](images/xxx.jpg)</div></pre></td></tr></table></figure></p>
<h3 id="自定义页面"><a href="#自定义页面" class="headerlink" title="自定义页面"></a>自定义页面</h3><p>以关于我的页面为例<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo new page &quot;about&quot;</div></pre></td></tr></table></figure></p>
<p>编辑 source/about/index.md：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">title: About</div><div class="line">date: 2016-02-01 11:11:11</div><div class="line">---</div><div class="line">About Me</div></pre></td></tr></table></figure></p>
<p>在主题的配置文件里添加入口<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">menu:</div><div class="line">  About: /about</div></pre></td></tr></table></figure></p>
<h3 id="添加小图标"><a href="#添加小图标" class="headerlink" title="添加小图标"></a>添加小图标</h3><p>将 favicon.ico 文件放在 source 目录下<br>配置 landscape-plus 主题里的 _config.yml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">favicon: /favicon.ico</div></pre></td></tr></table></figure></p>
<h3 id="添加”fork-me-on-github”"><a href="#添加”fork-me-on-github”" class="headerlink" title="添加”fork me on github”"></a>添加”fork me on github”</h3><p><a href="https://github.com/blog/273-github-ribbons" target="_blank" rel="external">官方教程</a><br>将代码插入到 layout.ejs</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装环境&quot;&gt;&lt;a href=&quot;#安装环境&quot; class=&quot;headerlink&quot; title=&quot;安装环境&quot;&gt;&lt;/a&gt;安装环境&lt;/h2&gt;&lt;h3 id=&quot;安装Node-js&quot;&gt;&lt;a href=&quot;#安装Node-js&quot; class=&quot;headerlink&quot; title=&quot;安装Node.js&quot;&gt;&lt;/a&gt;安装Node.js&lt;/h3&gt;&lt;p&gt;从&lt;a href=&quot;https://nodejs.org/en/&quot; style=&quot;text-decoration:none;&quot;&gt;Node.js官网&lt;/a&gt;按其提示安装，安装成功后如下图：&lt;br&gt;&lt;img src=&quot;https://maoqiq.github.io/images/01/01_01nodejs.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;安装成功的Node.js和npm都被安装到了/usr/local/bin目录下，可对其进行测试，看Node.js和npm是否可用：&lt;br&gt;查看Node.js的版本号：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;node -v&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="hexo博客搭建" scheme="https://itwanggj.github.io/categories/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
      <category term="博客优化" scheme="https://itwanggj.github.io/categories/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/%E5%8D%9A%E5%AE%A2%E4%BC%98%E5%8C%96/"/>
    
    
      <category term="Bootstrap" scheme="https://itwanggj.github.io/tags/Bootstrap/"/>
    
      <category term="jQuery" scheme="https://itwanggj.github.io/tags/jQuery/"/>
    
      <category term="Ionic" scheme="https://itwanggj.github.io/tags/Ionic/"/>
    
      <category term="hexo" scheme="https://itwanggj.github.io/tags/hexo/"/>
    
      <category term="github" scheme="https://itwanggj.github.io/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://itwanggj.github.io/2015/12/20/hello-world/"/>
    <id>https://itwanggj.github.io/2015/12/20/hello-world/</id>
    <published>2015-12-19T16:00:00.000Z</published>
    <updated>2017-02-26T06:48:45.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<a id="more"></a>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ hexo server&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Hello World" scheme="https://itwanggj.github.io/categories/Hello-World/"/>
    
      <category term="hexo" scheme="https://itwanggj.github.io/categories/Hello-World/hexo/"/>
    
    
      <category term="JavaScript" scheme="https://itwanggj.github.io/tags/JavaScript/"/>
    
      <category term="Html" scheme="https://itwanggj.github.io/tags/Html/"/>
    
      <category term="CSS" scheme="https://itwanggj.github.io/tags/CSS/"/>
    
  </entry>
  
</feed>
